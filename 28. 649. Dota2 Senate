class Solution {
    public String predictPartyVictory(String senate) {
      Queue<Integer> rq =new LinkedList<>(); 
      Queue<Integer> dq =new LinkedList<>();   
      char[] charArray = senate.toCharArray();
      for(int i=0 ; i<senate.length();i++){
          if(charArray[i] == 'R'){
              rq.offer(i);
          } else{
              dq.offer(i);
          }
      }
      while (!rq.isEmpty() && !dq.isEmpty()) {
            int rIndex = rq.poll();
            int dIndex = dq.poll();

            if (rIndex < dIndex) {
                rq.offer(rIndex + senate.length());
            } else {
                dq.offer(dIndex + senate.length());
            }
        }

        return rq.isEmpty() ? "Dire" : "Radiant";
    }
}
