import java.util.Stack;

class Solution {
    public String decodeString(String s) {
        Stack<String> st = new Stack<>();
        Stack<Integer> stn = new Stack<>();
        int currN = 0;
        StringBuilder currSt = new StringBuilder();
        
        for (char ch : s.toCharArray()) {
            if (Character.isDigit(ch)) {
                currN = currN * 10 + (ch - '0');
            } else if (ch == '[') {
                st.push(currSt.toString());
                stn.push(currN);
                currN = 0;
                currSt.setLength(0);
            } else if (Character.isLetter(ch)) {
                currSt.append(ch);
            } else if (ch == ']') {
                int prevN = stn.pop();
                String prevSt = st.pop();
                StringBuilder newString = new StringBuilder();
                for (int i = 0; i < prevN; i++) {
                    newString.append(currSt);
                }
                currSt = newString;
                currSt.insert(0, prevSt);
            }
        }
        return currSt.toString();
    }
}
