/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        if(root == null){
           return ans;
        }
        LinkedList<TreeNode> que = new LinkedList<>();
        que.addLast(root);
        while(!que.isEmpty()){
           int size = que.size();
           ans.add(que.getFirst().val);
           for(int i =0 ;i<size;i++){
               TreeNode node = que.removeFirst();
             if(node.right != null) {
                 que.addLast(node.right);
             }
             if(node.left != null){
                 que.addLast(node.left);
             }
           }
        }
        return ans;
    }
}
